# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- AzureDevOpsPipeline

variables:
  Solution.Path: 'Solution/HelloPCF'
  Version.Revision: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 0)]
  Version.Major: 1
  Version.Minor: 0
  Solution.Version: '0.0.0.0'


name: '$(Build.DefinitionName) $(Version.Major).$(Version.Minor).$(Date:yy)$(DayOfYear).$(Version.Revision)'

pool:
  vmImage: 'windows-latest'

steps:
- powershell: |
          $VersionRegex = "\d+\.\d+\.\d+\.\d+"
          $VersionData = [regex]::matches($Env:BUILD_BUILDNUMBER,$VersionRegex)
          Write-Host "##vso[task.setvariable variable=Solution.Version;]$VersionData"
  displayName: 'Get Version String'

- task: MSCRMSetVersion@12
  inputs:
    target: 'xml'
    unpackedFilesFolder: '$(Solution.Path)'
    versionNumber: '$(Solution.Version)'
- task: Npm@1
  displayName: 'npm install'
  enabled: false
  inputs:
    command: 'install'

- task: Npm@1
  displayName: 'npm ci'
  inputs:
    command: 'ci'

- task: Npm@1
  displayName: 'npm run build'
  inputs:
    command: 'custom'
    customCommand: 'run build --if-present'

- task: MSBuild@1
  displayName: 'Run MSBuild'
  inputs:
    solution: '$(Solution.Path)'
    configuration: 'Release'
    msbuildArguments: '/restore /t:rebuild'

- task: CopyFiles@2
  displayName: 'Copy managed and unmanaged files'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\$(Solution.Path)\bin\Release'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: 'PCF Solutions'
    publishLocation: 'pipeline'

